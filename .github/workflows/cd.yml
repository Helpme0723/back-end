name: talentVerse CD

on:
  workflow_dispatch: # 수동 실행 
  workflow_run: # 특정 workflow가 실행됐을 때
    workflows: ['talentVerse CI'] # CI workflow
    types: [completed] # 완료 되었을 때
    branches: [main] # main 브랜치

env: 
  AWS_REGION: ${{ secrets.AWS_REGION }} 
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }} 
  IMAGE_TAG: latest # CI 워크플로우에서 푸시한 이미지 태그와 동일하게 설정

jobs:
  deploy:
    # workflow 완료 후 결과가 성공 일 때
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout source code # 소스 코드를 체크아웃하는 단계
        uses: actions/checkout@v4 # GitHub 리포지토리의 소스 코드를 가져오기 위해 actions/checkout 액션 사용

      - name: Configure AWS credentials # AWS 자격 증명을 설정하는 단계
        uses: aws-actions/configure-aws-credentials@v2 # AWS CLI를 사용하기 위해 자격 증명 설정
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS Access Key ID를 GitHub Secrets에서 가져옴
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS Secret Access Key를 GitHub Secrets에서 가져옴
          aws-region: ${{ secrets.AWS_REGION }} # AWS 리전을 GitHub Secrets에서 가져와 설정
      
      - name: Fill in the new image ID in the Amazon ECS task definition # 새로운 이미지 ID로 ECS 태스크 정의 업데이트
        id: setting-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: talentverse # 컨테이너 이름
          image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  
      - name: Update ECS Service with New Image # 새로운 이미지로 ECS 서비스 업데이트
        run: |
          aws ecs update-service \
            --cluster talentverse-cluster \
            --service talentverse-service-2 \
            --force-new-deployment \
            --region $AWS_REGION