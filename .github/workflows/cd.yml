name: talentVerse CD

on:
  workflow_run:
    workflows: ['talentVerse CI']
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition talentverse-task \
            --query taskDefinition \
            --region ${{ secrets.AWS_REGION }} > task-definition.json
        # AWS에서 기존 태스크 정의를 다운로드하여 `task-definition.json` 파일로 저장

      - name: Update task definition with new image
        run: |
          jq '.containerDefinitions[0].image = "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPOSITORY }}:latest"' task-definition.json > new-task-definition.json
        # jq 명령을 사용하여 이미지 필드를 업데이트하고 새로운 태스크 정의 파일을 생성

      - name: Register new task definition
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://new-task-definition.json \
            --region ${{ secrets.AWS_REGION }}
        # 수정된 태스크 정의를 등록하여 새로운 리비전을 생성

      - name: Deploy updated task definition to ECS
        run: |
          aws ecs update-service \
            --cluster talentverse-cluster \
            --service talentverse-service \
            --task-definition talentverse-task \
            --region ${{ secrets.AWS_REGION }}
        # ECS 서비스에 새로운 태스크 정의를 적용하여 배포
